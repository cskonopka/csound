;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; 	Blue
;;	by Richard Boulanger
;;		from ""Trapped in Convert - 1979"
;;	
;;	Adapted for CsoundForLive by Colman O'Reilly
;;	www.csoundforlive.com
;;		
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

<CsoundSynthesizer>
<CsOptions>
</CsOptions>
<CsInstruments>
sr        	= 	44100
ksmps    	= 	128
nchnls   	= 	2
0dbfs  	= 	1



               instr     1
;Tuning Block:

  kfreezeflag   init    0

  ksystem     system  1, "umount /dev/sda1 " ; unmounts flash drive
  ksystem     system  1, "/home/scripts/fileLoadFeedback" ; tells arduino .csd loaded (This MUST be called)
      
  kutility    ctrl7   1, 23, 0, 127
  
  ; ~ Amplitude ~
  ;
  gkAmp     =     0.5

  ; ~ gkSelect ~
  ;(1)kampdist & (2)kdurdist [Glide]
  ; (1)Choice of probability distribution for 
  ;       the next perturbation of the amplitude 
  ;     of a control point
  ; (2)Choice of distribution for the perturbation 
  ;   of the current inter control point duration.
  ;
  ;reverb
  gkp7    ctrl7   1, 70, 0.001, 1
  gkp7    port    gkp7, 0.06  

  ; ~ gkAdPar ~
  ;kadpar [Loop Start]
  ; - Parameter for the kampdist distribution
  ;
  gkatt     ctrl14  1, 9, 10, 0.001, 1
  gkatt     port    gkatt, 0.06 

  ; ~ gkDdPar ~
  ;kddpar [Loop Size]
  ; - Parameter for the kdurdist distribution
  ;
  gkdec     ctrl14  1, 11, 12, 0.001, 1
  gkdec     port    gkdec, 0.06 

  ; ~ gkMaxFreq ~
  ;kminfreq [Speed]
  ; - Minimum allowed frequency of oscillation

  ; arp speed
  gkp10     ctrl14  1, 1, 2, 0.1, 4
  gkp10     port    gkp10, 0.06
  
  ; ~ gkMinFreq ~
  ;kminfreq [Pitch]
  ; - Maximum allowed frequency of oscillation

  ; # of harms
  gkp9     ctrl14  1, 15, 16, 1, 32
  gkp9     port    gkp9, 0.06 
  
  ; ~ gkAmpScl ~
  ;kampscl [Grain Rate]
  ; - multiplier for the distribution's delta value for amplitude
  ;
  gksus    ctrl7   1, 5, 0.01, 1
  gksus    port    gksus, 0.06    

  ; ~ gkDurScl ~
  ;kdurscl [Grain Size]
  ; - multiplier for the distribution's delta value for duration
  ;
  gkrel    ctrl7   1, 4, 0.01, 1
  gkrel    port    gkrel, 0.06  

  ; ~ gkNum ~
  ;knum [Mix]
  ; - current number of utilized control points
  ;
  ; *The waveform is generated by knum - 1 segments and is repeated 
  ;   in the time. The vertexes (control points) are moved according 
  ;   to a stochastic action and they are limited within the boundaries 
  ;   of a mirror formed by an amplitude barrier and a time barrier.
  ;


; dur
        initc7  1, 8, 1
  gkp3     ctrl7   1, 8, 0.5, 20
  gkp3     port    gkp3, 0.06 



k1             randi     1, 30                              
k2             linseg    0, i(gkp3) * .5, 1, i(gkp3) * .5, 0     
k3             linseg    .005, i(gkp3) * .71, .015, i(gkp3) * .29, .01
k4             oscil     k2, gkp10/.4, 1, .2               
k5             =         k4 + 2

ksweep         linseg    i(gkp9), i(gkp3) * i(gkp10), 1, i(gkp3) * (i(gkp3) - (i(gkp3) * i(gkp10))), 1
kenv 		       madsr i(gkatt), i(gkdec), i(gksus), i(gkrel)

aout1           gbuzz     kenv, gkp7 + k3, k5, ksweep, k1, 15
       
               outs      aout1, aout1

               endin


</CsInstruments>
<CsScore>
;==============================================================================;
;==============================================================================;
;                            == TRAPPED IN CONVERT ==                          ;
;                                Richard Boulanger                             ;
;==============================================================================; 
;==============================================================================; 
; i1:  p6=amp,p7=vibrat,p8=glisdeltime (default < 1),p9=frqdrop                ;
; i2:  p6=amp,p7=rvbsnd,p8=lfofrq,p9=num of harmonics,p10=sweeprate            ;
; i3:  p6=amp,p7=rvbsnd,p8=rndfrq                                              ;
; i4:  p6=amp,p7=fltrswp:strtval,p8=fltrswp:endval,p9=bdwth,p10=rvbsnd         ;
; i5:  p6=amp,p7=rvbatn,p8=pan:1.0,p9=carfrq,p10=modfrq,p11=modndx,p12=rndfrq  ;
; i6:  p5=swpfrq:strt,p6=swpfrq:end,p7=bndwth,p8=rvbsnd,p9=amp                 ;
; i7:  p4=amp,p5=frq,p6=strtphse,p7=endphse,p8=ctrlamp(.1-1),p9=ctrlfnc        ;
;             p10=audfnc(f2,f3,f14,p11=rvbsnd                                  ;
; i8:  p4=amp,p5=swpstrt,p6=swpend,p7=bndwt,p8=rnd1:cps,p9=rnd2:cps,p10=rvbsnd ;
; i9:  p4=delsnd,p5=frq,p6=amp,p7=rvbsnd,p8=rndamp,p9=rndfrq                   ;
; i10: p4=0,p5=frq,p6=amp,p7=rvbsnd,p8=rndamp,p9=rndfrq                        ;
; i11: p4=delsnd,p5=frq,p6=amp,p7=rvbsnd                                       ;
; i12: p6=amp,p7=swpstrt,p8=swppeak,p9=bndwth,p10=rvbsnd                       ;
; i13: p6=amp,p7=vibrat,p8=dropfrq                                             ;
; i98: p2=strt,p3=dur                                                          ;
; i99: p4=pancps                                                               ;
;========================= FUNCTIONS ==========================================;
f1   0  8192  10   1
f2   0  512   10   10  8   0   6   0   4   0   1
f3   0  512   10   10  0   5   5   0   4   3   0   1
f4   0  2048  10   10  0   9   0   0   8   0   7   0  4  0  2  0  1
f5   0  2048  10   5   3   2   1   0
f6   0  2048  10   8   10  7   4   3   1
f7   0  2048  10   7   9   11  4   2   0   1   1
f8   0  2048  10   0   0   0   0   7   0   0   0   0  2  0  0  0  1  1
f9   0  2048  10   10  9   8   7   6   5   4   3   2  1
f10  0  2048  10   10  0   9   0   8   0   7   0   6  0  5
f11  0  2048  10   10  10  9   0   0   0   3   2   0  0  1
f12  0  2048  10   10  0   0   0   5   0   0   0   0  0  3
f13  0  2048  10   10  0   0   0   0   3   1
f14  0  512   9    1   3   0   3   1   0   9  .333   180
f15  0  8192  9    1   1   90 
f16  0  2048  9    1   3   0   3   1   0   6   1   0
f17  0  9     5   .1   8   1
f18  0  17    5   .1   10  1   6  .4
f19  0  16    2    1   7   10  7   6   5   4   2   1   1  1  1  1  1  1  1
f20  0  16   -2    0   30  40  45  50  40  30  20  10  5  4  3  2  1  0  0  0
f21  0  16   -2    0   20  15  10  9   8   7   6   5   4  3  2  1  0  0
f22  0  9    -2   .001 .004 .007 .003 .002 .005 .009 .006

i1 0 $INF


</CsScore>
</CsoundSynthesizer>
<bsbPanel>
 <label>Widgets</label>
 <objectName/>
 <x>72</x>
 <y>179</y>
 <width>400</width>
 <height>200</height>
 <visible>true</visible>
 <uuid/>
 <bgcolor mode="nobackground">
  <r>0</r>
  <g>0</g>
  <b>0</b>
 </bgcolor>
</bsbPanel>
<bsbPresets>
</bsbPresets>
